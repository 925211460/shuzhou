# 环境
server.port=8081

#springboot会自动加载spring.datasource.*相关配置，数据源就会自动注入到sqlSessionFactory中，sqlSessionFactory会自动注入到Mapper中，对了你一切都不用管了，直接拿起来使用就行了
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://47.100.47.12:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = zhengda2012mysql

# mybatis
mybatis.typeAliasesPackage=com.shuzhou.domain
mybatis.mapperLocations=classpath:mapper/*.xml

spring.datasource.schema=classpath:import.sql

# log,SpringBoot默认采用logback框架
#格式为：’logging.level.* = LEVEL’
#logging.level：日志级别控制前缀，*为包名或Logger名
#LEVEL：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF

#logging.path=/var/log/shuzhou/
#logging.file.max-size=10
#logging.file.max-history=1
#logging.level.root=WARN
#logging.level.com.shuzhou.mapper=DEBUG

# Customizing the Banner
spring.banner.location=banner.txt
spring.banner.image.location=u=2199372251,3197506233&fm=27&gp=0.png
spring.main.banner-mode=console

# 配置随机生成的值
my.uuid=${random.uuid}
my.secret=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}

# 修改springboot加载配置文件的默认路径，默认是：file:./config/  file:./  classpath:/config/   classpath:/ ,配置了这个属性会覆盖原来的默认路径
# 如果想追加可以使用spring.config.additional-location
# 如果想修改默认的application.properties名字，可以使用spring.config.name
# 注意：因为spring.config.location和spring.config.name属性需要在加载配置文件之前就要确定，所以只能使用OS environment variable, a system property, or a command-line argument指定
# 在这里指定是不生效的
spring.config.location=classpath:/myconfig/

# 激活profile
shuzhou.profiles.active=dev

# 在properties中定义变量并引用
app.name=MyApp
app.description=${app.name} is a Spring Boot application

# kafka配置
kafka.bootstrap-servers=47.100.47.12:9092
kafka.acks=all
kafka.retries=0
kafka.batch-size=16384
kafka.linger-ms=1
kafka.buffer-memory=33554432
kafka.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.value-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.group-id=test_group
kafka.enable-auto-commit=true
kafka.auto-commit-interval-ms=1000
kafka.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

